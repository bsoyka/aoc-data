[project]
name = "aoc-data"
version = "0.0.1"
description = "Real data to test your Advent of Code solutions"
authors = [{ name = "Ben Soyka", email = "hello@bsoyka.me" }]
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[dependency-groups]
dev = [
    "bump-my-version>=1.2.1",
    "hypothesis>=6.136.4",
    "mypy>=1.17.0",
    "poethepoet>=0.36.0",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.5",
    "tox-uv>=1.26.2",
]

[project.urls]
Changelog = "https://github.com/bsoyka/aoc-data/releases"
Source = "https://github.com/bsoyka/aoc-data"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
include = [
  "aoc_data/data/**/*.json",
]

[tool.poe.tasks]
_format = "ruff format"
_lint = "ruff check --fix"
bump = "bump-my-version bump"
pc = "pre-commit run --all-files"
ruff = ["_lint", "_format"]

[tool.ruff]
preview = true

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"
quote-style = "single"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "CPY",     # Checks for a file-level copyright statement.
    "COM812",  # Checks for the absence of trailing commas. Not recommended with formatter.
    "COM819",  # Checks for prohibited trailing commas. Not recommended with formatter.
    "FIX002",  # Checks for to-do comments.
    "PLR6301", # Checks if methods can be made into functions, class methods, or static methods.
    "TD002",   # Checks for missing author in to-do comments.
]
pydocstyle.convention = "google"
flake8-quotes.inline-quotes = "single"
flake8-tidy-imports.ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
"*_test.py" = [
    "INP",     # Checks for packages missing an __init__.py file.
    "PLC2701", # Checks for private name imports.
    "PLR2004", # Checks for "magic" values.
    "S101",    # Checks for the use of assert statements.
]

[tool.tox]
requires = ["tox>=4.28.1"]
env_list = ["3.9", "3.10", "3.11", "3.12", "3.13", "type"]

[tool.tox.env_run_base]
commands = [["pytest"]]

[tool.tox.env.type]
commands = [["mypy", "."]]

[tool.mypy]
strict = true

[tool.bumpversion]
current_version = "0.0.1"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "chore: bump {current_version} → {new_version}"
allow_dirty = false
commit = true
message = "chore: bump {current_version} → {new_version}"
moveable_tags = []
commit_args = ""
setup_hooks = []
pre_commit_hooks = ["uv lock --upgrade-package aoc-data", "git add uv.lock"]
post_commit_hooks = []
